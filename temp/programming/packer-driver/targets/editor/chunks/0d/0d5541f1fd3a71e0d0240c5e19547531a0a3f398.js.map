{"version":3,"sources":["file:///E:/lianlukeji/frontend/cocos/menghuanfarm/assets/code/scaleAction.ts"],"names":["_decorator","Component","Node","tween","CCInteger","Vec3","CCFloat","ccclass","property","scaleAction","Boolean","start","isChild","nodes","children","forEach","node","action","target","to","sleep","scale","scaleMax","position","easing","scaleMin","repeatForever","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,O,OAAAA,O;;;;;;;;;OACxD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;6BAGjBS,W,WADZF,OAAO,CAAC,aAAD,C,UAGHC,QAAQ,CAACN,IAAD,C,UAGRM,QAAQ,CAACJ,SAAD,C,UAGRI,QAAQ,CAACF,OAAD,C,UAGRE,QAAQ,CAACF,OAAD,C,UAERE,QAAQ,CAACE,OAAD,C,2BAdb,MACaD,WADb,SACiCR,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAevCU,QAAAA,KAAK,GAAG;AACJ,cAAI,KAAKC,OAAT,EAAkB;AACd,iBAAKC,KAAL,CAAWC,QAAX,CAAoBC,OAApB,CAA4BC,IAAI,IAAI;AAChC,kBAAIC,MAAM,GAAGd,KAAK,GAAGe,MAAR,CAAeF,IAAf,EACRG,EADQ,CACL,KAAKC,KADA,EACO;AAAEC,gBAAAA,KAAK,EAAE,IAAIhB,IAAJ,CAAS,KAAKiB,QAAd,EAAwB,KAAKA,QAA7B,EAAuC,CAAvC,CAAT;AAAoDC,gBAAAA,QAAQ,EAAEP,IAAI,CAACO;AAAnE,eADP,EACsF;AAC3FC,gBAAAA,MAAM,EAAE;AADmF,eADtF,EAIRL,EAJQ,CAIL,KAAKC,KAJA,EAIO;AAAEC,gBAAAA,KAAK,EAAE,IAAIhB,IAAJ,CAAS,KAAKoB,QAAd,EAAwB,KAAKA,QAA7B,EAAuC,CAAvC,CAAT;AAAoDF,gBAAAA,QAAQ,EAAEP,IAAI,CAACO;AAAnE,eAJP,EAIsF;AAC3FC,gBAAAA,MAAM,EAAE;AADmF,eAJtF,CAAb;AAQArB,cAAAA,KAAK,GAAGe,MAAR,CAAeF,IAAf,EAAqBU,aAArB,CAAmCT,MAAnC,EAA2CN,KAA3C;AACH,aAVD;AAWH,WAZD,MAYO;AACH,gBAAIM,MAAM,GAAGd,KAAK,GAAGe,MAAR,CAAe,KAAKF,IAApB,EACRG,EADQ,CACL,KAAKC,KADA,EACO;AAAEC,cAAAA,KAAK,EAAE,IAAIhB,IAAJ,CAAS,KAAKiB,QAAd,EAAwB,KAAKA,QAA7B,EAAuC,CAAvC,CAAT;AAAoDC,cAAAA,QAAQ,EAAE,KAAKP,IAAL,CAAUO;AAAxE,aADP,EAC2F;AAChGC,cAAAA,MAAM,EAAE;AADwF,aAD3F,EAIRL,EAJQ,CAIL,KAAKC,KAJA,EAIO;AAAEC,cAAAA,KAAK,EAAE,IAAIhB,IAAJ,CAAS,KAAKoB,QAAd,EAAwB,KAAKA,QAA7B,EAAuC,CAAvC,CAAT;AAAoDF,cAAAA,QAAQ,EAAE,KAAKP,IAAL,CAAUO;AAAxE,aAJP,EAI2F;AAChGC,cAAAA,MAAM,EAAE;AADwF,aAJ3F,CAAb;AAQArB,YAAAA,KAAK,GAAGe,MAAR,CAAe,KAAKF,IAApB,EAA0BU,aAA1B,CAAwCT,MAAxC,EAAgDN,KAAhD;AACH;AAEJ;;AAEDgB,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA5CsC,O;;;;;;;;;;;;;;;;;;;;;;;;;iBAc7B,K","sourcesContent":["import { _decorator, Component, Node, tween, CCInteger, Vec3, CCFloat } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('scaleAction')\r\nexport class scaleAction extends Component {\r\n    //节点组\r\n    @property(Node)\r\n    nodes;\r\n    //速度\r\n    @property(CCInteger)\r\n    sleep;\r\n    //放大\r\n    @property(CCFloat)\r\n    scaleMax;\r\n    //缩小\r\n    @property(CCFloat)\r\n    scaleMin;\r\n    @property(Boolean)\r\n    isChild = false;\r\n    start() {\r\n        if (this.isChild) {\r\n            this.nodes.children.forEach(node => {\r\n                let action = tween().target(node)\r\n                    .to(this.sleep, { scale: new Vec3(this.scaleMax, this.scaleMax, 0), position: node.position }, {\r\n                        easing: \"smooth\"\r\n                    })\r\n                    .to(this.sleep, { scale: new Vec3(this.scaleMin, this.scaleMin, 0), position: node.position }, {\r\n                        easing: \"smooth\"\r\n                    })\r\n                    ;\r\n                tween().target(node).repeatForever(action).start();\r\n            });\r\n        } else {\r\n            let action = tween().target(this.node)\r\n                .to(this.sleep, { scale: new Vec3(this.scaleMax, this.scaleMax, 0), position: this.node.position }, {\r\n                    easing: \"smooth\"\r\n                })\r\n                .to(this.sleep, { scale: new Vec3(this.scaleMin, this.scaleMin, 0), position: this.node.position }, {\r\n                    easing: \"smooth\"\r\n                })\r\n                ;\r\n            tween().target(this.node).repeatForever(action).start();\r\n        }\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n"]}